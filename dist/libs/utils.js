'use strict';

/*
* 公用方法集合
*/
var Start = new Date(2017, 0, 31);
var timestamp = 86400000;

function add0(m) {
  return m < 10 ? '0' + m : m;
}
function getTime(shijianchuo) {
  //shijianchuo是整数，否则要parseInt转换
  var time = new Date(shijianchuo);
  var y = time.getFullYear();
  var m = time.getMonth() + 1;
  var d = time.getDate();
  var s = time.getSeconds();
  return y + '.' + add0(m) + '.' + add0(d);
}

var getDays = function getDays() {
  var startTime = Start.getTime();
  var nowTime = new Date().getTime();
  var days = Math.ceil((nowTime - startTime) / timestamp);
  return days;
};
var fakeCount = function fakeCount(data) {
  if (Array.isArray(data)) {
    data.forEach(function (obj) {
      obj.fake_count = Math.round(obj.play_count / 100) + obj.collection_count;
    });
  } else {
    data.fake_count = Math.round(data.play_count / 100) + data.collection_count;
  }
  return data;
};
var courseList = function courseList(list, days) {
  var weeks = ["日", "一", "二", "三", "四", "五", "六"];
  var days = getDays();
  var obj = [];
  for (var i = 0; i < list.length / 3; i++) {
    var minutes = 0;
    var date = getTime(new Date().getTime() - i * timestamp - (getDays() - days) * timestamp).replace(/\./g, "/");
    var lists = list.slice(i * 3, (i + 1) * 3);
    lists.forEach(function (res) {
      res.fake_count = Math.round(res.play_count / 100) + res.collection_count;
      minutes += res.duration_sum.replace(':', ".") * 1;
    });
    obj[i] = {
      arr: lists,
      date: date,
      week: weeks[new Date(date).getDay()],
      minutes: Math.round(minutes)
    };
  }
  return obj;
};
var checkNew = function checkNew(res) {
  var data = res;
  console.log(res);
  var nowTime = new Date().getTime();
  for (var i in data) {
    var createTime = new Date(data[i].start).getTime();
    var days = Math.ceil((nowTime - createTime) / (1000 * 60 * 60 * 24));
    data[i].days = days;
  }
  return data;
};
module.exports = {
  getDays: getDays,
  fakeCount: fakeCount,
  courseList: courseList,
  checkNew: checkNew
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInV0aWxzLmpzIl0sIm5hbWVzIjpbIlN0YXJ0IiwiRGF0ZSIsInRpbWVzdGFtcCIsImFkZDAiLCJtIiwiZ2V0VGltZSIsInNoaWppYW5jaHVvIiwidGltZSIsInkiLCJnZXRGdWxsWWVhciIsImdldE1vbnRoIiwiZCIsImdldERhdGUiLCJzIiwiZ2V0U2Vjb25kcyIsImdldERheXMiLCJzdGFydFRpbWUiLCJub3dUaW1lIiwiZGF5cyIsIk1hdGgiLCJjZWlsIiwiZmFrZUNvdW50IiwiZGF0YSIsIkFycmF5IiwiaXNBcnJheSIsImZvckVhY2giLCJvYmoiLCJmYWtlX2NvdW50Iiwicm91bmQiLCJwbGF5X2NvdW50IiwiY29sbGVjdGlvbl9jb3VudCIsImNvdXJzZUxpc3QiLCJsaXN0Iiwid2Vla3MiLCJpIiwibGVuZ3RoIiwibWludXRlcyIsImRhdGUiLCJyZXBsYWNlIiwibGlzdHMiLCJzbGljZSIsInJlcyIsImR1cmF0aW9uX3N1bSIsImFyciIsIndlZWsiLCJnZXREYXkiLCJjaGVja05ldyIsImNvbnNvbGUiLCJsb2ciLCJjcmVhdGVUaW1lIiwic3RhcnQiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOztBQUFBOzs7QUFHQSxJQUFNQSxRQUFRLElBQUlDLElBQUosQ0FBUyxJQUFULEVBQWUsQ0FBZixFQUFrQixFQUFsQixDQUFkO0FBQ0EsSUFBTUMsWUFBWSxRQUFsQjs7QUFFQSxTQUFTQyxJQUFULENBQWNDLENBQWQsRUFBaUI7QUFBRSxTQUFPQSxJQUFJLEVBQUosR0FBUyxNQUFNQSxDQUFmLEdBQW1CQSxDQUExQjtBQUE2QjtBQUNoRCxTQUFTQyxPQUFULENBQWlCQyxXQUFqQixFQUE4QjtBQUM1QjtBQUNBLE1BQUlDLE9BQU8sSUFBSU4sSUFBSixDQUFTSyxXQUFULENBQVg7QUFDQSxNQUFJRSxJQUFJRCxLQUFLRSxXQUFMLEVBQVI7QUFDQSxNQUFJTCxJQUFJRyxLQUFLRyxRQUFMLEtBQWtCLENBQTFCO0FBQ0EsTUFBSUMsSUFBSUos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UUFBSTJCLGFBQWEsSUFBSWhELElBQUosQ0FBU3FCLEtBQUtZLENBQUwsRUFBUWdCLEtBQWpCLEVBQXdCN0MsT0FBeEIsRUFBakI7QUFDQSxRQUFJYSxPQUFPQyxLQUFLQyxJQUFMLENBQVUsQ0FBQ0gsVUFBVWdDLFVBQVgsS0FBMEIsT0FBTyxFQUFQLEdBQVksRUFBWixHQUFpQixFQUEzQyxDQUFWLENBQVg7QUFDQTNCLFNBQUtZLENBQUwsRUFBUWhCLElBQVIsR0FBZUEsSUFBZjtBQUNEO0FBQ0QsU0FBT0ksSUFBUDtBQUNELENBVkQ7QUFXQTZCLE9BQU9DLE9BQVAsR0FBaUI7QUFDZnJDLGtCQURlO0FBRWZNLHNCQUZlO0FBR2ZVLHdCQUhlO0FBSWZlO0FBSmUsQ0FBakIiLCJmaWxlIjoidXRpbHMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuKiDlhaznlKjmlrnms5Xpm4blkIhcbiovXG5jb25zdCBTdGFydCA9IG5ldyBEYXRlKDIwMTcsIDAsIDMxKVxuY29uc3QgdGltZXN0YW1wID0gODY0MDAwMDBcblxuZnVuY3Rpb24gYWRkMChtKSB7IHJldHVybiBtIDwgMTAgPyAnMCcgKyBtIDogbSB9XG5mdW5jdGlvbiBnZXRUaW1lKHNoaWppYW5jaHVvKSB7XG4gIC8vc2hpamlhbmNodW/mmK/mlbTmlbDvvIzlkKbliJnopoFwYXJzZUludOi9rOaNolxuICB2YXIgdGltZSA9IG5ldyBEYXRlKHNoaWppYW5jaHVvKTtcbiAgdmFyIHkgPSB0aW1lLmdldEZ1bGxZZWFyKCk7XG4gIHZhciBtID0gdGltZS5nZXRNb250aCgpICsgMTtcbiAgdmFyIGQgPSB0aW1lLmdldERhdGUoKTtcbiAgdmFyIHMgPSB0aW1lLmdldFNlY29uZHMoKTtcbiAgcmV0dXJuIHkgKyAnLicgKyBhZGQwKG0pICsgJy4nICsgYWRkMChkKTtcbn1cblxuY29uc3QgZ2V0RGF5cyA9ICgpID0+IHtcbiAgdmFyIHN0YXJ0VGltZSA9IFN0YXJ0LmdldFRpbWUoKVxuICB2YXIgbm93VGltZSA9IG5ldyBEYXRlKCkuZ2V0VGltZSgpXG4gIHZhciBkYXlzID0gTWF0aC5jZWlsKChub3dUaW1lIC0gc3RhcnRUaW1lKSAvIHRpbWVzdGFtcClcbiAgcmV0dXJuIGRheXNcbn1cbmNvbnN0IGZha2VDb3VudCA9IChkYXRhKSA9PiB7XG4gIGlmIChBcnJheS5pc0FycmF5KGRhdGEpKSB7XG4gICAgZGF0YS5mb3JFYWNoKChvYmopID0+IHtcbiAgICAgIG9iai5mYWtlX2NvdW50ID0gTWF0aC5yb3VuZChvYmoucGxheV9jb3VudCAvIDEwMCkgKyBvYmouY29sbGVjdGlvbl9jb3VudFxuICAgIH0pXG4gIH0gZWxzZSB7XG4gICAgZGF0YS5mYWtlX2NvdW50ID0gTWF0aC5yb3VuZChkYXRhLnBsYXlfY291bnQgLyAxMDApICsgZGF0YS5jb2xsZWN0aW9uX2NvdW50XG4gIH1cbiAgcmV0dXJuIGRhdGFcbn1cbmNvbnN0IGNvdXJzZUxpc3QgPSAobGlzdCwgZGF5cykgPT4ge1xuICB2YXIgd2Vla3MgPSBbXCLml6VcIiwgXCLkuIBcIiwgXCLkuoxcIiwgXCLkuIlcIiwgXCLlm5tcIiwgXCLkupRcIiwgXCLlha1cIl1cbiAgdmFyIGRheXMgPSBnZXREYXlzKClcbiAgdmFyIG9iaiA9IFtdXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgKGxpc3QubGVuZ3RoIC8gMyk7IGkrKykge1xuICAgIHZhciBtaW51dGVzID0gMDtcbiAgICB2YXIgZGF0ZSA9IGdldFRpbWUobmV3IERhdGUoKS5nZXRUaW1lKCkgLSBpICogdGltZXN0YW1wIC0gKGdldERheXMoKSAtIGRheXMpICogdGltZXN0YW1wKS5yZXBsYWNlKC9cXC4vZywgXCIvXCIpXG4gICAgdmFyIGxpc3RzID0gbGlzdC5zbGljZShpICogMywgKGkgKyAxKSAqIDMpXG4gICAgbGlzdHMuZm9yRWFjaChyZXMgPT4ge1xuICAgICAgcmVzLmZha2VfY291bnQgPSBNYXRoLnJvdW5kKHJlcy5wbGF5X2NvdW50IC8gMTAwKSArIHJlcy5jb2xsZWN0aW9uX2NvdW50XG4gICAgICBtaW51dGVzICs9IHJlcy5kdXJhdGlvbl9zdW0ucmVwbGFjZSgnOicsIFwiLlwiKSAqIDFcbiAgICB9KVxuICAgIG9ialtpXSA9IHtcbiAgICAgIGFycjogbGlzdHMsXG4gICAgICBkYXRlOiBkYXRlLFxuICAgICAgd2Vlazogd2Vla3NbbmV3IERhdGUoZGF0ZSkuZ2V0RGF5KCldLFxuICAgICAgbWludXRlczogTWF0aC5yb3VuZChtaW51dGVzKVxuICAgIH1cbiAgfVxuICByZXR1cm4gb2JqXG59XG5jb25zdCBjaGVja05ldyA9IChyZXMpID0+IHtcbiAgdmFyIGRhdGEgPSByZXNcbiAgY29uc29sZS5sb2cocmVzKVxuICB2YXIgbm93VGltZSA9IG5ldyBEYXRlKCkuZ2V0VGltZSgpXG4gIGZvciAodmFyIGkgaW4gZGF0YSkge1xuICAgIHZhciBjcmVhdGVUaW1lID0gbmV3IERhdGUoZGF0YVtpXS5zdGFydCkuZ2V0VGltZSgpXG4gICAgdmFyIGRheXMgPSBNYXRoLmNlaWwoKG5vd1RpbWUgLSBjcmVhdGVUaW1lKSAvICgxMDAwICogNjAgKiA2MCAqIDI0KSlcbiAgICBkYXRhW2ldLmRheXMgPSBkYXlzXG4gIH1cbiAgcmV0dXJuIGRhdGFcbn1cbm1vZHVsZS5leHBvcnRzID0ge1xuICBnZXREYXlzLFxuICBmYWtlQ291bnQsXG4gIGNvdXJzZUxpc3QsXG4gIGNoZWNrTmV3XG59XG4iXX0=